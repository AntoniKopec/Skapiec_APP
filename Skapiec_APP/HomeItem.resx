<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="home_picture.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZJGz9Gn1UqVKmAZ//9k=
</value>
  </data>
</root>